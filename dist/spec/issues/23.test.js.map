{"version":3,"file":"23.test.js","sourceRoot":"","sources":["../../../spec/issues/23.test.ts"],"names":[],"mappings":";;AAAA,2BAAuB;AAEvB,yCAAkD;AASlD,aAAI,CAAC,kDAAkD,EAAE,UAAA,CAAC;IACtD,IAAM,gBAAgB,GAAG,kBAAU,CAAC,GAAG,EAAuB,CAAC;IAE/D,IAAI,MAAM,GAAG,CAAC,CAAC;IACf,gBAAgB,CAAC,GAAG,CAAC,WAAG,CAAC,GAAG,EAAE,CAAC,CAAC,OAAO,CAAC,UAAC,CAAC,EAAE,CAAC;QACzC,OAAO,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;IAC1B,CAAC,CAAC,CAAC;IAEH,CAAC,CAAC,MAAM,CAAC,cAAM,OAAA,gBAAgB,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,WAAG,CAAC,GAAG,EAAE,EAAE,WAAG,CAAC,GAAG,EAAE,CAAC,EAArD,CAAqD,CAAC,CAAC;IAEtE,CAAC,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC","sourcesContent":["import test from 'ava';\r\n\r\nimport { Substitute, Arg } from '../../src/Index';\r\n\r\ninterface CalculatorInterface {\r\n    add(a: number, b: number): number\r\n    subtract(a: number, b: number): number\r\n    divide(a: number, b: number): number\r\n    isEnabled: boolean\r\n}\r\n\r\ntest('issue 23: mimick received should not call method', t => {\r\n    const mockedCalculator = Substitute.for<CalculatorInterface>();\r\n\r\n    let result = 0;\r\n    mockedCalculator.add(Arg.all()).mimicks((a, b) => {\r\n        return result = a + b;\r\n    });\r\n\r\n    t.throws(() => mockedCalculator.received().add(Arg.any(), Arg.any()));\r\n\r\n    t.is(result, 0);\r\n});"]}