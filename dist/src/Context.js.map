{"version":3,"file":"Context.js","sourceRoot":"","sources":["../../src/Context.ts"],"names":[],"mappings":"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","sourcesContent":["import { areArgumentsEqual } from \"./Utilities\";\r\nimport { ENGINE_METHOD_DIGESTS } from \"constants\";\r\n\r\nexport abstract class ProxyPropertyContextBase {\r\n    name: string;\r\n\r\n    type: 'function' | 'object';\r\n    access: 'write' | 'read';\r\n\r\n    constructor() {\r\n        this.name = null;\r\n        this.type = null;\r\n        this.access = null;\r\n    }\r\n}\r\n\r\nexport class ProxyReturnValues {\r\n    valueSequence: any[];\r\n    currentSequenceOffset: number;\r\n\r\n    constructor(...args: any[]) {\r\n        this.valueSequence = args || [];\r\n        this.currentSequenceOffset = 0;\r\n    }\r\n}\r\n\r\nexport class ProxyPropertyContext extends ProxyPropertyContextBase {\r\n    type: 'object';\r\n    returnValues: ProxyReturnValues;\r\n}\r\n\r\nexport class ProxyMethodPropertyContext extends ProxyPropertyContextBase {\r\n    method: ProxyMethodContext;\r\n\r\n    type: 'function';\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.method = new ProxyMethodContext();\r\n    }\r\n}\r\n\r\nexport class ProxyMethodContext {\r\n    arguments: any[];\r\n    returnValues: ProxyReturnValues;\r\n\r\n    constructor() {\r\n        this.arguments = [];\r\n    }\r\n}\r\n\r\nexport class ProxyCallRecords {\r\n    expected: ProxyCallRecord;\r\n    actual: ProxyCallRecord[];\r\n\r\n    constructor() {\r\n        this.expected = null;\r\n        this.actual = [];\r\n    }\r\n}\r\n\r\nexport class ProxyObjectContext {\r\n    property: ProxyPropertyContext;\r\n    calls: ProxyCallRecords;\r\n\r\n    constructor() {\r\n        this.calls = new ProxyCallRecords();\r\n        this.property = new ProxyPropertyContext();\r\n    }\r\n\r\n    setExpectedCallCount(count: number) {\r\n        const call = new ProxyCallRecord();\r\n        call.callCount = count;\r\n\r\n        this.calls.expected = call;\r\n    }\r\n\r\n    findExpectedCall(propertyName: string, access: 'read' | 'write') {\r\n        return this.findCall(this.calls.expected, propertyName, access);\r\n    }\r\n\r\n    findActualCall(propertyName: string, access: 'read' | 'write') {\r\n        return this.findCall(this.calls.actual, propertyName, access);\r\n    }\r\n\r\n    addActualCall(...args: any[]) {\r\n        this.addCall(this.calls.actual, args);\r\n    }\r\n\r\n    private findCall(callList: ProxyCallRecord[], propertyName: string, access: 'read'|'write') {\r\n        return callList.filter(x => \r\n            x.property.name === propertyName &&\r\n            x.property.access === access)[0] || null;\r\n    }\r\n\r\n    private addCall(callList: ProxyCallRecord[], args?: any[]) {\r\n        let existingCall: ProxyCallRecord;\r\n\r\n        const existingCallCandidates = callList.filter(x => \r\n            x.property.name === this.property.name &&\r\n            x.property.access === this.property.access);\r\n\r\n        if(args) {\r\n            existingCall = existingCallCandidates.filter(x => \r\n                x.property.type === 'function' && \r\n                areArgumentsEqual(x.property.method.arguments, args))[0];\r\n        } else {\r\n            existingCall = existingCallCandidates[0];\r\n        }\r\n            \r\n        if(existingCall) {\r\n            existingCall.callCount++;\r\n            return;\r\n        }\r\n\r\n        const newCall = new ProxyCallRecord(this.property);\r\n        newCall.callCount++;\r\n\r\n        callList.push(newCall);\r\n    }\r\n}\r\n\r\nexport class ProxyCallRecord {\r\n    callCount: number;\r\n    property: ProxyPropertyContext | ProxyMethodPropertyContext;\r\n\r\n    constructor(property?: ProxyPropertyContext | ProxyMethodPropertyContext) {\r\n        this.callCount = 0;\r\n        this.property = property || null;\r\n    }\r\n}"]}