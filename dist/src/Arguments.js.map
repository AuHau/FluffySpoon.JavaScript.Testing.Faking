{"version":3,"file":"Arguments.js","sourceRoot":"","sources":["../../src/Arguments.ts"],"names":[],"mappings":";;AAAA;IACI,aACY,WAAmB,EACnB,gBAAuC;QADvC,gBAAW,GAAX,WAAW,CAAQ;QACnB,qBAAgB,GAAhB,gBAAgB,CAAuB;IAGnD,CAAC;IAED,qBAAO,GAAP,UAAQ,GAAQ;QACZ,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;IACtC,CAAC;IAED,sBAAQ,GAAR;QACI,OAAO,IAAI,CAAC,WAAW,CAAC;IAC5B,CAAC;IAED,qBAAO,GAAP;QACI,OAAO,IAAI,CAAC,WAAW,CAAC;IAC5B,CAAC;IAIM,OAAG,GAAV,UAAW,IAAa;QACpB,IAAM,WAAW,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,gBAAgB,GAAG,IAAI,GAAG,GAAG,CAAC;QACxE,OAAO,IAAI,GAAG,CAAC,WAAW,EAAE,UAAA,CAAC;YACzB,IAAG,OAAO,IAAI,KAAK,QAAQ;gBACvB,OAAO,IAAI,CAAC;YAEhB,IAAG,IAAI,KAAK,OAAO;gBACf,OAAO,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAEjC,OAAO,OAAO,CAAC,KAAK,IAAI,CAAC;QAC7B,CAAC,CAAC,CAAC;IACP,CAAC;IAIM,MAAE,GAAT,UAAa,gBAA6C;QACtD,IAAG,OAAO,gBAAgB,KAAK,UAAU;YACrC,OAAO,IAAI,GAAG,CAAC,0BAA0B,GAAG,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,GAAG,GAAG,EAAE,gBAAgB,CAAC,CAAC;QAE5G,OAAO,IAAI,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,GAAG,GAAG,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC,KAAK,gBAAgB,EAAtB,CAAsB,CAAC,CAAC;IAC7G,CAAC;IAEc,eAAW,GAA1B,UAA2B,GAAQ;QAC/B,IAAG,OAAO,GAAG,CAAC,OAAO,KAAK,UAAU;YAChC,OAAO,GAAG,CAAC,OAAO,EAAE,CAAC;QAEzB,IAAG,OAAO,GAAG,CAAC,QAAQ,KAAK,UAAU;YACjC,OAAO,GAAG,CAAC,QAAQ,EAAE,CAAC;QAE1B,OAAO,GAAG,CAAC;IACf,CAAC;IACL,UAAC;AAAD,CAAC,AArDD,IAqDC;AArDY,kBAAG","sourcesContent":["export class Arg {\r\n    private constructor(\r\n        private description: string,\r\n        private matchingFunction: (arg: any) => boolean\r\n    ) {\r\n\r\n    }\r\n\r\n    matches(arg: any) {\r\n        return this.matchingFunction(arg);\r\n    }\r\n\r\n    toString() {\r\n        return this.description;\r\n    }\r\n\r\n    inspect() {\r\n        return this.description;\r\n    }\r\n\r\n    static any()\r\n    static any<T extends 'string'|'number'|'boolean'|'symbol'|'undefined'|'object'|'function'|'array'>(type: T)\r\n    static any(type?: string) {\r\n        const description = !type ? '{any arg}' : '{arg matching ' + type + '}';\r\n        return new Arg(description, x => {\r\n            if(typeof type !== 'string')\r\n                return true;\r\n\r\n            if(type === 'array')\r\n                return x && Array.isArray(x);\r\n\r\n            return typeof x === type;\r\n        });\r\n    }\r\n\r\n    static is<T>(value: T)\r\n    static is<T>(predicate: (input: T) => boolean) \r\n    static is<T>(predicateOrValue: ((input: T) => boolean) | T) {\r\n        if(typeof predicateOrValue === 'function')\r\n            return new Arg('{arg matching predicate ' + this.toStringify(predicateOrValue) + '}', predicateOrValue);\r\n\r\n        return new Arg('{arg matching ' + this.toStringify(predicateOrValue) + '}', x => x === predicateOrValue);\r\n    }\r\n\r\n    private static toStringify(obj: any) {\r\n        if(typeof obj.inspect === 'function')\r\n            return obj.inspect();\r\n\r\n        if(typeof obj.toString === 'function')\r\n            return obj.toString();\r\n\r\n        return obj;\r\n    }\r\n}"]}